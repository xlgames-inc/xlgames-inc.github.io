<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>XLE development blog</title>
    <description>XLE development blog</description>
    <link>http://xlgames-inc.github.io</link>
    <pubDate>February 02, 2016</pubDate>
    <item>
      <title>About</title>
      <link>http://xlgames-inc.github.io/about</link>
      <description>&lt;p&gt;XLE is an open-source game engine (currently in development).&lt;/p&gt;

&lt;p&gt;Find us on Github:
    &lt;a href="https://github.com/xlgames-inc/XLE"&gt;https://github.com/xlgames-inc/XLE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Documentation starting point:
    &lt;a href="https://github.com/xlgames-inc/XLE/wiki"&gt;https://github.com/xlgames-inc/XLE/wiki&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Archive</title>
      <link>http://xlgames-inc.github.io/archive</link>
      <description>
  &lt;h2&gt;2016&lt;/h2&gt;
    &lt;h3&gt;February&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;February 01, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;h3&gt;January&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;January 29, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 26, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 25, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 22, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 21, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;h2&gt;2015&lt;/h2&gt;
    &lt;h3&gt;December&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;December 16, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/functionlinkedshaders"&gt;Dynamic Function Linking Graph for Shaders&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 11, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/rectlightdiffuse"&gt;Rectangle Light diffuse vs 3DS Max&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 09, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/workingonrectlights"&gt;Working some improvements to rectangle lights&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 04, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/whattodofirst"&gt;What to do first&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 02, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 01, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/first"&gt;First post&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Categories</title>
      <link>http://xlgames-inc.github.io/categories</link>
      <description>
&lt;ul class="tag_box inline"&gt;
  &lt;li&gt;
    &lt;a href="/categories#XLE-ref"&gt;XLE &lt;span&gt;11&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/categories#blog-ref"&gt;blog &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;h3&gt;XLE (11)&lt;/h3&gt;
  &lt;ul&gt;
      &lt;li&gt;&lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/functionlinkedshaders"&gt;Dynamic Function Linking Graph for Shaders&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/rectlightdiffuse"&gt;Rectangle Light diffuse vs 3DS Max&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/whattodofirst"&gt;What to do first&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/workingonrectlights"&gt;Working some improvements to rectangle lights&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;blog (1)&lt;/h3&gt;
  &lt;ul&gt;
      &lt;li&gt;&lt;a href="/posts/first"&gt;First post&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Home</title>
      <link>http://xlgames-inc.github.io/</link>
      <description>&lt;p&gt;
    XLE is a open-source (MIT license) game engine currently in development at XL Games.&lt;br /&gt;
    &lt;i&gt;Please note; this engine is still a work in progress!&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;For more information, see our &lt;a href="https://github.com/xlgames-inc/XLE/wiki"&gt;wiki on Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dev team contact: &lt;a href="mailto:xle@xlgames.com"&gt;xle@xlgames.com&lt;/a&gt; (in English or Korean)&lt;/p&gt;

  &lt;h2&gt;2016&lt;/h2&gt;
    &lt;h3&gt;February&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;February 01, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;h3&gt;January&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;January 29, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 26, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 25, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 22, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;January 21, 2016&lt;/span&gt; &amp;raquo; &lt;a href="/posts/materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;h2&gt;2015&lt;/h2&gt;
    &lt;h3&gt;December&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;span&gt;December 16, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/functionlinkedshaders"&gt;Dynamic Function Linking Graph for Shaders&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 11, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/rectlightdiffuse"&gt;Rectangle Light diffuse vs 3DS Max&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 09, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/workingonrectlights"&gt;Working some improvements to rectangle lights&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 04, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/whattodofirst"&gt;What to do first&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 02, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;span&gt;December 01, 2015&lt;/span&gt; &amp;raquo; &lt;a href="/posts/first"&gt;First post&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;p&gt;&lt;img src="/assets/media/NyraAndDragon1.png"&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class="post"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;br /&gt; &lt;span class="date"&gt;February 01, 2016&lt;/span&gt;&lt;/h3&gt;

  &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I've been working on improving the accuracy of the Imaged Based Lighting (IBL) solution for XLE. This is the technology that allows us to load in a background panorama map and use it for both diffuse and specular lighting.&lt;/p&gt;

&lt;p&gt;The best way to do this is by comparing our real-time result to other renderers. So, for example, I've been experimenting with Substance Designer (more on that later). It has nVidia's "IRay" raytracer built-in -- so we can compare the non-real-time results from IRay with real-time XLE. I have other ways to do this, also -- for example, the shader in ToolsHelper/BRDFSlice.sh can generate textures directly comparable with Disney's BRDFExplorer tool.&lt;/p&gt;

&lt;p&gt;While doing this (and working on the specular transmission stuff), I've found some interesting improvements to the IBL solution!&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is a really long post; so I'll start with the conclusion. I've made a number of improvements that make the IBL solution appear more realistic, and more similar to ray tracers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/ImprovedIBL/Spheres.png"&gt;
&lt;br&gt;&lt;img src="/assets/media/ImprovedIBL/SpheresMetal.png"&gt;
&lt;br&gt;&lt;img src="/assets/media/ImprovedIBL/Jamie.png"&gt;
&lt;em&gt;"Jamie Gnome" model from here: &lt;a href="http://www.turbosquid.com/3d-models/free-obj-mode-jamie-hyneman-gnome/789391"&gt;http://www.turbosquid.com/3d-models/free-obj-mode-jamie-hyneman-gnome/789391&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I found some errors in some source material I referenced and fixed some incorrect assumptions I made. Each change is small. But when added up, they make a big difference. The IBL specular is has a lot much punch, things are jumping off the screen better.&lt;/p&gt;

&lt;p&gt;Now, I'll go into detail about what's changed.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;IBL basis&lt;/h2&gt;

&lt;/div&gt;

  &lt;div class="more"&gt;
    &lt;a href="/posts/improvedibl" class="btn btn-small"&gt;read more..&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="post"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;br /&gt; &lt;span class="date"&gt;January 29, 2016&lt;/span&gt;&lt;/h3&gt;

  &lt;div class="summary ellipsis"&gt;
&lt;p&gt;Just a quick update... I've been making some great progress with transmitted specular for IBL!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/TransSpec/TransSphereMat.png"&gt;&lt;/p&gt;

&lt;p&gt;These screenshots will look a little strange (I mean that black borders &amp;amp; grainyness), because it's a debugging rendering mode.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/TransSpec/TransSphereMat2.png"&gt;&lt;/p&gt;

&lt;p&gt;I've got the split-term stuff going; and it looks like it should be practical. I'd prefer to avoid having yet another cubemap, so maybe there's some way to just reuse the reflection filtered cubemap. Its seems reasonable to say that the filtering should be similar. We just need some way to calculate the amount of blurriness that is correct for transmissions.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/TransSpec/TransSphereMat3.png"&gt;&lt;/p&gt;

&lt;p&gt;Speaking of that, I've been thinking the type of filtering that is applied to the specular map. More on that later.&lt;/p&gt;

&lt;p&gt;Next week I'll post some proper screenshots &amp;amp; a whole lot of details!&lt;/p&gt;

&lt;p&gt;I made some interesting observations while doing this, I've got a bunch of new changes and improvements for IBL. Check out the "experimental" branch for now.&lt;/p&gt;

&lt;p&gt;BTW, the node diagram for the GGX BSDF equation looks a little nicer now --&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/TransSpec/BSDFNodes2.png"&gt;&lt;/p&gt;

&lt;/div&gt;

  &lt;div class="more"&gt;
    &lt;a href="/posts/transmittedspecular2" class="btn btn-small"&gt;read more..&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="post"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;br /&gt; &lt;span class="date"&gt;January 26, 2016&lt;/span&gt;&lt;/h3&gt;

  &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I've included a few Gradle scripts in the XLE distribution. This is mostly just a simple set of tools I use for my own testing. But you may find it useful for your own needs.&lt;/p&gt;

&lt;p&gt;Of course this system isn't designed to be 100% robust and fool proof. Actually, it's just a few simple scripts. But it is scalable and flexible.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Gradle&lt;/h2&gt;

&lt;p&gt;At heart, an &lt;strong&gt;"asset path"&lt;/strong&gt; is some system that can identify changed assets, recognize processing working that needs to be performed with those assets, and schedule that work.&lt;/p&gt;

&lt;p&gt;For example, we might have an asset for a sky background texture. Various processing tools need to pre-filter this texture so it can be used for image based lighting. Whenever the texture changes (or when the processing tools change) we want to execute the processing steps and produce intermediate assets.&lt;/p&gt;

&lt;p&gt;XLE does some processing at runtime. But that is only practical for short processing steps. Expensive processing steps need some other solution.&lt;/p&gt;

&lt;p&gt;So we need some build system to manage assets and dependences. Are requirements are similar to build systems we use for code. But most code-oriented build systems don't work well for assets.&lt;/p&gt;

&lt;p&gt;I picked &lt;em&gt;Gradle&lt;/em&gt; because of it's procedural nature. It allows us to specify input assets -- but also to give instructions to the build path on how to handle that object. For example, we need to tell the build path if a texture is a sky texture, a normals texture, or some other type... That kind of thing just falls out of &lt;em&gt;Gradle&lt;/em&gt; very easily.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Executing Gradle&lt;/h2&gt;

&lt;p&gt;First, you need to install Gradle, from: &lt;a href="http://gradle.org/gradle-download/"&gt;http://gradle.org/gradle-download/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Tools/AssetPath, we have the "settings.gradle" root project file. Also, this folder contains some "groovy" source files that contain gradle task type implementations. So, there is a task type for processing sky textures -- which basically just involves executing a number of command line operations.&lt;/p&gt;
&lt;/div&gt;

  &lt;div class="more"&gt;
    &lt;a href="/posts/assetpathscripts" class="btn btn-small"&gt;read more..&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="post"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;br /&gt; &lt;span class="date"&gt;January 25, 2016&lt;/span&gt;&lt;/h3&gt;

  &lt;div class="summary ellipsis"&gt;
&lt;p&gt;I've modified the lighting equations to allow for transmitted (as well as reflected) specular for dynamic lightings. Transmitted specular means the light is on the opposite side of the object, but light is coming through the object towards the viewer.&lt;/p&gt;

&lt;p&gt;This is important for thin materials (such as leaves)&lt;/p&gt;

&lt;h3 id="toc_0"&gt;No transmitted specular:&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/TransSpec/LeavesNoTransSpec.png"&gt;&lt;/p&gt;

&lt;h3 id="toc_1"&gt;With transmitted specular:&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/TransSpec/LeavesTransSpec.png"&gt;&lt;/p&gt;

&lt;p&gt;Here the amount of transmission is maybe slightly too high -- but it shows the effect well.
This works particularly well with shadowed directional lights and geometry using order independent transparency. The above screenshot is exactly that situation. The tree leaves are rendered with stochastic transparency (which works particularly well for this model). So we get a nice halo effect around the edges of the tree.&lt;/p&gt;

&lt;p&gt;And, if you look closely, you can see that the tree shadowing is blocking the transmitted specular, giving a volumetric look.&lt;/p&gt;

&lt;p&gt;This model is built in a way to create a lot of noise in the normals. As you can see here:
&lt;br&gt;&lt;img src="/assets/media/TransSpec/LeavesNormals.png"&gt;&lt;/p&gt;

&lt;p&gt;Normals point in every direction, and there is a lot of local variation.&lt;/p&gt;
&lt;/div&gt;

  &lt;div class="more"&gt;
    &lt;a href="/posts/transmittedspecular" class="btn btn-small"&gt;read more..&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="post"&gt;
  &lt;h3 class="title"&gt;&lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;br /&gt; &lt;span class="date"&gt;January 22, 2016&lt;/span&gt;&lt;/h3&gt;

  &lt;div class="summary"&gt;
&lt;p&gt;Here is a node diagram for the specular transmission function (BTDF) from Walter, et al, from &lt;em&gt;"Microfacet Models for Refraction through Rough Surfaces."&lt;/em&gt;
Also known as the "GGX" model (or Trowbridge-Reitz).&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img src="/assets/media/MaterialTool/WalterGGXTransmission.png"&gt;&lt;/p&gt;

&lt;p&gt;You can see how the node graph comes in handy for debugging a shader function like this. It's useful to visualize each term and see it's effects.
For example, the "D" term of the BTDF is a node on the diagram. And we can visualize the effects of that term independent of everything else.&lt;/p&gt;

&lt;p&gt;In this case, the diagram saves a HLSL function, and that function is called by text-based HLSL code. This will become part of some new functionality for specular transmission through thin surfaces.&lt;/p&gt;

&lt;p&gt;I'll pop this in a new "experimental" branch.&lt;/p&gt;

&lt;p&gt;See the post from yesterday, &lt;a href="materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;, for more information.&lt;/p&gt;
&lt;/div&gt;

  &lt;div class="more"&gt;
    &lt;a href="/posts/transmissionnodegraph" class="btn btn-small"&gt;read more..&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="pagination"&gt;
  &lt;ul&gt;
      &lt;li class="active"&gt;&lt;a href="/posts/index/1"&gt;1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/index/2"&gt;2&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/posts/index/3"&gt;3&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Pages</title>
      <link>http://xlgames-inc.github.io/pages</link>
      <description>
&lt;ul&gt;
  
    &lt;li&gt;&lt;a href="/about"&gt;About&lt;/a&gt;&lt;/li&gt;
  
  
    &lt;li&gt;&lt;a href="/archive"&gt;Archive&lt;/a&gt;&lt;/li&gt;
  
  
    &lt;li&gt;&lt;a href="/categories"&gt;Categories&lt;/a&gt;&lt;/li&gt;
  
  
    &lt;li&gt;&lt;a href="/"&gt;Home&lt;/a&gt;&lt;/li&gt;
  
    &lt;li class="active"&gt;&lt;a href="/pages" class="active"&gt;Pages&lt;/a&gt;&lt;/li&gt;
  
  
  
    &lt;li&gt;&lt;a href="/tags"&gt;Tags&lt;/a&gt;&lt;/li&gt;
  
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Tags</title>
      <link>http://xlgames-inc.github.io/tags</link>
      <description>
&lt;ul class="tag_box inline"&gt;
  &lt;li&gt;
    &lt;a href="/tags#PBR-ref"&gt;PBR &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#AreaLights-ref"&gt;AreaLights &lt;span&gt;5&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Roughness-ref"&gt;Roughness &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Materials-ref"&gt;Materials &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#AssetPath-ref"&gt;AssetPath &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Gradle-ref"&gt;Gradle &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#IBL-ref"&gt;IBL &lt;span&gt;2&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#blog-ref"&gt;blog &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#D3D-ref"&gt;D3D &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#ShaderCompile-ref"&gt;ShaderCompile &lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Lights-ref"&gt;Lights &lt;span&gt;3&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Specular-ref"&gt;Specular &lt;span&gt;3&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#GGX-ref"&gt;GGX &lt;span&gt;3&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#MaterialTool-ref"&gt;MaterialTool &lt;span&gt;2&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Tools-ref"&gt;Tools &lt;span&gt;2&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#Shaders-ref"&gt;Shaders &lt;span&gt;2&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/tags#RectangleLights-ref"&gt;RectangleLights &lt;span&gt;2&lt;/span&gt;&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;h3 id="PBR-ref"&gt;PBR&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="AreaLights-ref"&gt;AreaLights&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/rectlightdiffuse"&gt;Rectangle Light diffuse vs 3DS Max&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/workingonrectlights"&gt;Working some improvements to rectangle lights&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Roughness-ref"&gt;Roughness&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Materials-ref"&gt;Materials&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/arealightsandpbr"&gt;Area Lights with Physically Based Rendering&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="AssetPath-ref"&gt;AssetPath&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Gradle-ref"&gt;Gradle&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="IBL-ref"&gt;IBL&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/assetpathscripts"&gt;Processing textures with the XLE scriptable asset path&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="blog-ref"&gt;blog&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/first"&gt;First post&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="D3D-ref"&gt;D3D&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/functionlinkedshaders"&gt;Dynamic Function Linking Graph for Shaders&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="ShaderCompile-ref"&gt;ShaderCompile&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/functionlinkedshaders"&gt;Dynamic Function Linking Graph for Shaders&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Lights-ref"&gt;Lights&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Specular-ref"&gt;Specular&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="GGX-ref"&gt;GGX&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/improvedibl"&gt;Improved IBL&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular"&gt;Transmitted specular&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmittedspecular2"&gt;Transmitted specular progress&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="MaterialTool-ref"&gt;MaterialTool&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Tools-ref"&gt;Tools&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="Shaders-ref"&gt;Shaders&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/materialtool"&gt;Material and Node Diagram Tool&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/transmissionnodegraph"&gt;Transmission Node Diagram&lt;/a&gt;&lt;/li&gt;
  &lt;h3 id="RectangleLights-ref"&gt;RectangleLights&lt;/h3&gt;
    &lt;li&gt;&lt;a href="/posts/rectlightdiffuse"&gt;Rectangle Light diffuse vs 3DS Max&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/posts/workingonrectlights"&gt;Working some improvements to rectangle lights&lt;/a&gt;&lt;/li&gt;
 
</description>
    </item>
  </channel>
</rss>
